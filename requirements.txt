-- RSpy GUI Logger (hiá»ƒn thá»‹ trÃªn mÃ n hÃ¬nh)
local Players = game:GetService("Players")
local lp = Players.LocalPlayer

-- Táº¡o GUI
local gui = Instance.new("ScreenGui")
gui.Name = "RemoteLoggerGui"
gui.ResetOnSpawn = false
gui.Parent = lp:WaitForChild("PlayerGui")

-- Táº¡o Label
local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, 0, 0, 140)
label.Position = UDim2.new(0, 0, 0.8, 0)
label.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
label.BackgroundTransparency = 0.3
label.TextColor3 = Color3.fromRGB(0, 255, 0)
label.Font = Enum.Font.Code
label.TextScaled = true
label.TextWrapped = true
label.Text = "ðŸŸ¢ Cháº¡m nÃºt Ä‘á»ƒ hiá»ƒn thá»‹ RemoteEvent..."
label.Parent = gui

-- Báº¯t hook
for _, f in ipairs(getgc(true)) do
	if typeof(f) == "function" and islclosure(f) and not is_synapse_function(f) then
		local constants = debug.getconstants(f)
		if table.find(constants, "FireServer") or table.find(constants, "InvokeServer") then
			hookfunction(f, function(...)
				local args = {...}
				local self = args[1]
				if typeof(self) == "Instance" and (self:IsA("RemoteEvent") or self:IsA("RemoteFunction")) then
					local txt = "ðŸ“¡ " .. self.ClassName .. ": " .. self:GetFullName()
					for i = 2, #args do
						txt = txt .. "\nðŸŸ¨ Arg[" .. (i - 1) .. "]: " .. tostring(args[i])
					end
					label.Text = txt
				end
				return f(...)
			end)
		end
	end
end
